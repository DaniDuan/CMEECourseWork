Starting weekly feedback for Quqiming, Week1

Current Points = 100

Note that: 
(1) Major sections begin with a double "====" line 
(2) Subsections begin with a single "====" line 
(3) Code output or text file content are printed within single "*****" lines 

======================================================================
======================================================================
Your Git repo size this week is about 1.65 MiB on disk 

PART 1: Checking project workflow...

Found the following directories in parent directory: .git, Feedback, Week1, Week2

Found the following files in parent directory: README.md, .gitignore

Checking for key files in parent directory...

Found .gitignore in parent directory, great! 

Printing contents of .gitignore:

**********************************************************************
.vscode*
python_2*
sys
__pycache__*
csv
**********************************************************************

Found README in parent directory, named: README.md

Printing contents of README.md:

**********************************************************************
# My CMEE Coursework Repository

## Description

This repository contains **codes**, **data files** and **generated results** of CMEE Coursework, including basic computing and data analysis and statistics based on [The Multilingual Quantitative Biologist](https://mhasoba.github.io/TheMulQuaBio/intro.html#) book; organize on weekly basis and update on daily basis.

## Languages

- [x] Bash;
- [ ] Python;
- [ ] R

## Dependencies

For some scripts [imagemagick](https://imagemagick.org/index.php) installation is required.

```bash
sudo apt install imagemagick
```
[LaTeX](https://www.latex-project.org/) installation is required (which is a large installation):
```bash
sudo apt install texlive-full texlive-fonts-recommended texlive-pictures texlive-latex-extra imagemagick
```
## Installation

To use scripts in this repository, clone and run.

```bash
git clone https://github.com/DaniDuan/CMEECourseWork.git
```

## Project structure and Usage 

### Chapter 1: Computing
- [x] **Week1**

Shell scripts for courseworks in **shell scripting** and scientific documents with **LaTex** :

- **CompileLaTeX&#46;sh:** A bash script to compile latex with bibtex.

- **ConcatenateTwoFiles&#46;sh:** Concatenate the contents of two files.

- **countlines&#46;sh:** Count number of lines in a file.

- **csvtospace&#46;sh:** Converts a comma separated values (csv) file to a space separated values file (txt); or convert all csv files in the input directory to space separated txt files.

- **MyExampleScript&#46;sh:** A welcome message prints out Hello $User(user name).

- **tabtocsv&#46;sh:** Transform comma-separated files (csv) to tab-separated files. 

- **tiff2png&#46;sh:** Convert a .tif image into .png image; or convert all .tif images in the input directory to .png files.

- **variables&#46;sh**: Examples for usage of variables. 

- **UnixPrac1.txt:** UNIX shell commands with certain functions for reading .fasta files (in the data directory). 

<br/>

- [ ] Week2

Biological computing in **Python** :

- [ ] Week3

Biological Computing in **R**: 

<br/>

### Chapter 2: Data analysis and statistics

<br/>


## Author name and contact

Name: Danica Duan

Email: d.duan20@imperial.ac.uk
**********************************************************************

======================================================================
Looking for the weekly directories...

Found 2 weekly directories: Week1, Week2

The Week1 directory will be assessed 

======================================================================
======================================================================
PART 2: Checking weekly code and workflow...

======================================================================
Assessing WEEK1...

Found the following directories: data, code, sandbox, results

Found the following files: README.md

Checking for readme file in weekly directory...

Found README in parent directory, named: README.md

Printing contents of README.md:

**********************************************************************
# Coursework for CMEE: Week 1

## Description

This Week1 directory contains shell scripts for coursework in **shell scripting** and scientific documents with **LaTex** sections of the Computing Chapter of [The Multilingual Quantitative Biologist](https://mhasoba.github.io/TheMulQuaBio/intro.html) book.

## Languages

Bash

## Dependencies

For some scripts in this directory [imagemagick](https://imagemagick.org/index.php) installation is required.

```bash
sudo apt install imagemagick
```
[LaTeX](https://www.latex-project.org/) installation is required:
```bash
sudo apt install texlive-full texlive-fonts-recommended texlive-pictures texlive-latex-extra imagemagick
```


## Installation

To use scripts in this directory clone the repository and run.

```bash
git clone https://github.com/DaniDuan/CMEECourseWork.git
```

## Project structure and Usage 

- **CompileLaTeX&#46;sh:** A bash script to compile latex with bibtex.

- **ConcatenateTwoFiles&#46;sh:** Concatenate the contents of two files.

- **countlines&#46;sh:** Count number of lines in a file.

- **csvtospace&#46;sh:** Converts a comma separated values (csv) file to a space separated values file (txt); or convert all csv files in the input directory to space separated txt files.

- **MyExampleScript&#46;sh:** A welcome message prints out Hello $User(user name).

- **tabtocsv&#46;sh:** Transform comma-separated files (csv) to tab-separated files. 

- **tiff2png&#46;sh:** Convert a .tif image into .png image; or convert all .tif images in the input directory to .png files.

- **variables&#46;sh**: Examples for usage of variables. 

- **UnixPrac1.txt:** UNIX shell commands with certain functions for reading .fasta files (in the data directory). 

## Author name and contact

Name: Danica Duan

Email: d.duan20@imperial.ac.uk
**********************************************************************

Results directory is empty - good! 

Found 12 code files: ConcatenateTwoFiles.sh, tiff2png.sh, UnixPrac1.txt, variables.sh, FirstBiblio.bib, csvtospace.sh, CompileLaTeX.sh, boilerplate.sh, FirstExample.tex, tabtocsv.sh, MyExampleScript.sh, countlines.sh

Found the following extra files: FirstExample.pdf
0.5 pt deducted per extra file

Current Points = 99.5

======================================================================
Testing script/code files...

======================================================================
Inspecting script file ConcatenateTwoFiles.sh...

File contents are:

**********************************************************************
#!/bin/bash
# Author: Danica dd1820@imperial.ac.uk
# Script: ConcatenateTwoFiles.sh
# Description: Concatenate the contents of two files
# Arguements: 1 + 2 -> 3
# Date: Oct.2020

#Check if the first file name is entered
if [ -z "$1" ] # If no first file name entered
then echo "Please enter both file names and a name for your output file, seperated by space"
elif [ -z "$2" ] # If no second file name entered
then echo "Please also include the second file name"
elif [ -z "$3" ] # If no output file name entered
then echo "Please also include a third name for your output file"
else # If all file names are entered 
	cat $1 > $3 #Import the first file into the concatenated file
	cat $2 >> $3 #Append the second file to the concatenated file
	echo "merged file is"
	cat $3 #Display the concatenated file
fi
exit
**********************************************************************

Testing ConcatenateTwoFiles.sh...

Output (only first 500 characters): 


**********************************************************************
Please enter both file names and a name for your output file, seperated by space

**********************************************************************

Code ran without errors

Time consumed = 0.00600s

======================================================================
Inspecting script file tiff2png.sh...

File contents are:

**********************************************************************
#!/bin/bash
# Author: Danica dd1820@imperial.ac.uk
# Script: tiff2png.sh
# Description: Convert tiff to png
# Arguements: none
# Date: Oct.2020

#Check if something is entered with bash command
if [ -z "$1" ] 
then
	echo "Please enter an image name or a directory with bash command!"
else
#Check if the user entered a directory, change all tif in the directory
	if [ -d "$1" ]
	then
    	for f in $1/*.tif;
		do 
			echo "converting $f";
			convert "$f" "${f%tif}png" ;
			echo "Done!"
		done
	elif [ -f "$1" ]
    then
#Check if the entered file is an image		
		if identify $1 &> /dev/null #With ImageMagick
		then
			echo "converting $1";
			convert "$1" "${1%tif}png" ;
			echo "Done!"
		else
			echo "Input is not an image"
		fi
	else 
        echo "File does not exist"
    fi
fi
#exit
**********************************************************************

Testing tiff2png.sh...

Output (only first 500 characters): 


**********************************************************************
Please enter an image name or a directory with bash command!

**********************************************************************

Code ran without errors

Time consumed = 0.00584s

======================================================================
Inspecting script file UnixPrac1.txt...

File contents are:

**********************************************************************
#1 Counting lines in each file
wc -l 407228326.fasta 407228412.fasta E.coli.fasta
#2 Printing start from the second line
tail -n +2 ../data/E.coli.fasta
#3 Count the sequence length of the genome
tail -n +2 ../data/E.coli.fasta | tr -d "\n\r" | wc -c
#4 Count the matches of "ATCG"
tail -n +2 ../data/E.coli.fasta | tr -d "\n\r" | grep -o ATGC | wc -l
#5 Compute the AT/GC ratio
echo $[((`tail -n +2 ../data/E.coli.fasta | grep -o A | wc -l` + `tail -n +2 ../data/E.coli.fasta | grep -o T | wc -l`))]/$[((`tail -n +2 ../data/E.coli.fasta | grep -o G | wc -l` + `tail -n +2 ../data/E.coli.fasta | grep -o C | wc -l`))] | bc -l


#5 Another method?
echo "scale=3;" $(grep -o "A\|T" ../Data/E.coli.fasta | wc -l) / $(grep -o "G\|C" ../Data/E.coli.fasta | wc -l) | bc

**********************************************************************

Testing UnixPrac1.txt...

======================================================================
Inspecting script file variables.sh...

File contents are:

**********************************************************************
#!/bin/bash

# Shows the use of variables
MyVar='some string'
echo 'the current value of the variable is' $MyVar
echo 'Please enter a new string'
read MyVar
echo 'the current value of the variable is' $MyVar

## Reading multiple values
echo 'Enter two numbers separated by space(s)'
read a b
echo 'you entered' $a 'and' $b '. Their sum is:'
mysum=`expr $a + $b`
echo $mysum\

exit
**********************************************************************

Testing variables.sh...

Output (only first 500 characters): 


**********************************************************************
the current value of the variable is some string
Please enter a new string
the current value of the variable is
Enter two numbers separated by space(s)
you entered and . Their sum is:


**********************************************************************

Encountered error (or warning):
expr: syntax error: missing argument after ‘+’

======================================================================
Inspecting script file FirstBiblio.bib...

File contents are:

**********************************************************************
@article{einstein1905does,
  title={Does the inertia of a body depend upon its energy-content},
  author={Einstein, Albert},
  journal={Ann Phys},
  volume={18},
  pages={639--641},
  year={1905}
}

**********************************************************************

Testing FirstBiblio.bib...

======================================================================
Inspecting script file csvtospace.sh...

File contents are:

**********************************************************************
#!/bin/bash
# Author: Danica dd1820@imperial.ac.uk
# Script: csvtospace.sh
# Description: substitute the commas in the file with spaces
#
# Save the output into a a space separated .txt file
# Arguements: 1 -> txt delimited file
# Date: Oct.2020 



if [ -z "$1" ] #If user did not enter the file name with bash command
then
	echo "Please enter a file name or a directory with bash command!"
else #If user entered a name with bash command
#Check if the user entered a directory, change all files in the directory
	if [ -d "$1" ] #If a directory is entered
	then
    	for i in $1/*.csv;
    	do
        	echo "Creating a space separated version of $i ..."
        	output="${i%csv}txt"
			cat $i | tr -s "," "\b" >> $output
        	echo "Done!"
    	done
	elif [ -f "$1" ] # if the file exist
    then
		#Check whether the file is empty
		if [ -s "$1" ] #If the file is not empty
        then 
			echo "Creating a space separated version of $1 ..."
			output="${1%csv}txt"
            cat $1 | tr -s "," "\b" >> $output
            echo "Done!"
        else #If the file is empty
			echo "Creating a space separated version of $1 ..."
			output="${1%csv}txt"
            cat $1 | tr -s "," "\b" >> $output
            echo "Done!"
            echo "Warning: File is empty!"
        fi
    else #If the input file does not exist
        echo "File does not exist"
    fi
fi
exit

**********************************************************************

Testing csvtospace.sh...

Output (only first 500 characters): 


**********************************************************************
Please enter a file name or a directory with bash command!

**********************************************************************

Code ran without errors

Time consumed = 0.00701s

======================================================================
Inspecting script file CompileLaTeX.sh...

File contents are:

**********************************************************************
#!/bin/bash
x=${1%.tex}
pdflatex $x.tex
pdflatex $x.tex
bibtex $x.bib
pdflatex $x.tex
pdflatex $x.tex
evince $x.pdf &

## Cleanup
rm *~
rm *.aux
rm *.dvi
rm *.log
rm *.nav
rm *.out
rm *.snm
rm *.toc
**********************************************************************

Testing CompileLaTeX.sh...

Output (only first 500 characters): 


**********************************************************************
This is pdfTeX, Version 3.14159265-2.6-1.40.20 (TeX Live 2019/Debian) (preloaded format=pdflatex)
 restricted \write18 enabled.
entering extended mode
(/usr/share/texlive/texmf-dist/tex/latex/tools/.tex
LaTeX2e <2020-02-02> patch level 2
L3 programming layer <2020-02-14> File ignored)
*
! Emergency stop.
<*> .tex
        
!  ==> Fatal error occurred, no output PDF file produced!
Transcript written on .log.
This is pdfTeX, Version 3.14159265-2.6-1.40.20 (TeX Live 2019/Debian) (preloaded format=pdf
**********************************************************************

Encountered error (or warning):
rm: cannot remove '*~': No such file or directory
rm: cannot remove '*.aux': No such file or directory
rm: cannot remove '*.dvi': No such file or directory
rm: cannot remove '*.log': No such file or directory
rm: cannot remove '*.nav': No such file or directory
rm: cannot remove '*.out': No such file or directory
rm: cannot remove '*.snm': No such file or directory
rm: cannot remove '*.toc': No such file or directory

** (evince:42998): WARNING **: 16:50:25.216: Error when getting information for file “/home/mhasoba/Documents/Teaching/IC_CMEE/2020-21/Coursework/StudentRepos/QuqimingDuan_dd1820/Week1/code/.pdf”: No such file or directory

** (evince:42998): WARNING **: 16:50:25.217: set_filenames: Error when getting information for file “/home/mhasoba/Documents/Teaching/IC_CMEE/2020-21/Coursework/StudentRepos/QuqimingDuan_dd1820/Week1/code/.pdf”: No such file or directory

** (evince:42998): WARNING **: 16:50:25.251: Error setting file metadata: No such file or directory

** (evince:42998): WARNING **: 16:50:25.251: Error setting file metadata: No such file or directory

** (evince:42998): WARNING **: 16:50:25.251: Error setting file metadata: No such file or directory

** (evince:42998): WARNING **: 16:50:25.251: Error setting file metadata: No such file or directory

** (evince:42998): WARNING **: 16:50:25.251: Error setting file metadata: No such file or directory

** (evince:42998): WARNING **: 16:50:25.251: Error setting file metadata: No such file or directory

** (evince:42998): WARNING **: 16:50:25.251: Error setting file metadata: No such file or directory

** (evince:42998): WARNING **: 16:50:25.251: Error setting file metadata: No such file or directory

** (evince:42998): WARNING **: 16:50:25.251: Error setting file metadata: No such file or directory

** (evince:42998): WARNING **: 16:50:25.251: Error setting file metadata: No such file or directory

** (evince:42998): WARNING **: 16:50:25.251: Error setting file metadata: No such file or directory

** (evince:42998): WARNING **: 16:50:25.251: Error setting file metadata: No such file or directory

** (evince:42998): WARNING **: 16:50:25.257: Error setting file metadata: No such file or directory

======================================================================
Inspecting script file boilerplate.sh...

File contents are:

**********************************************************************
#!/bin/bash
# Author: Danica dd1820@imperial.ac.uk
# Script: boilerplate.sh
# Desc: simple boilerplate for shell scripts
# Arguements: none
# Date: Oct.2020

echo -e "\nThis is a shell script\n"

#exit

**********************************************************************

Testing boilerplate.sh...

Output (only first 500 characters): 


**********************************************************************

This is a shell script


**********************************************************************

Code ran without errors

Time consumed = 0.01167s

======================================================================
Inspecting script file FirstExample.tex...

File contents are:

**********************************************************************
\documentclass[12pt]{article}

\title{A Simple Document}

\author{Your Name}

\date{}

\begin{document}
  \maketitle
  
  \begin{abstract}
    This paper must be cool!
  \end{abstract}
  
  \section{Introduction}
    Blah Blah!
  
  \section{Materials \& Methods}
  One of the most famous equations is:
  \begin{equation}
    E = mc^2
  \end{equation}
  This equation was first proposed by Einstein in 1905 
  \cite{einstein1905does}.
  
  \bibliographystyle{plain}
  \bibliography{FirstBiblio}
\end{document}

**********************************************************************

Testing FirstExample.tex...

======================================================================
Inspecting script file tabtocsv.sh...

File contents are:

**********************************************************************
#!/bin/bash
# Author: Danica dd1820@imperial.ac.uk
# Script: tabtocsv.sh
# Description: substitute the tabs in the file with commas
#
# Save the output into a .csv file
# Arguements: 1 -> tab delimited file
# Date: Oct.2020 

#Check whether a file is inputted
if [ -z "$1" ] #If user did not enter the file name with bash command
then
	echo "Please enter a file name with bash command"
else #If user entered the file name with bash command
	if [ -f "$1" ] # if the file exist
    then
#Check whether its already a csv file
	    if [ $1 == *.csv ] #If the input file is already a csv file
        then
	        echo "Already a csv file"
#Check whether the file is empty
        else #If the input file is not a csv file
			if [ -s "$1" ] #If the file is not empty
            then 
                echo "Creating a comma delimited version of $1"
                cat $1 | tr -s "\t" "," >> $1.csv
                echo "done!"
#Check whether the file is empty
            else #If the file is empty
                echo "File is empty!"
            fi
        fi
    else #If the input file does not exist
        echo "File does not exist"
    fi
fi
exit
**********************************************************************

Testing tabtocsv.sh...

Output (only first 500 characters): 


**********************************************************************
Please enter a file name with bash command

**********************************************************************

Code ran without errors

Time consumed = 0.00734s

======================================================================
Inspecting script file MyExampleScript.sh...

File contents are:

**********************************************************************
#!/bin/bash

msg1="Hello"
msg2=$USER
echo "$msg1 $msg2"
echo "Hello $USER"
echo

exit
**********************************************************************

Testing MyExampleScript.sh...

Output (only first 500 characters): 


**********************************************************************
Hello mhasoba
Hello mhasoba


**********************************************************************

Code ran without errors

Time consumed = 0.00856s

======================================================================
Inspecting script file countlines.sh...

File contents are:

**********************************************************************
#!/bin/bash
# Author: Danica dd1820@imperial.ac.uk
# Script: countlines.sh
# Description: Count lines in a file
# Arguements: none
# Date: Oct.2020

#Check whether a file is inputted
if [ -z "$1" ] #If user did not enter the file name with bash command
then
        n=0 #set a variable to determine whether or not exit the loop
        while [ $n = 0 ]
        do
                echo "please enter a file name"
                read FileName #Allow the user to enter a file name
                if [ -n "$FileName" ] #If file name is inputted
                then
                        n=1 #Exit the loop
                else #If file name is still not inputted
                        n=$n #return to enter a file name
                fi
        done
	Numlines=`wc -l < $FileName` #Set a variable for lines counting in a file
	echo "The file $FileName has $NumLines lines"
	echo
else #If user entered the file name with bash command
	Numlines=`wc -l < $1` #Set a variable for lines counting in a file
	echo "The file $1 has $Numlines lines"
fi
exit
**********************************************************************

Testing countlines.sh...

Output (only first 500 characters): 


**********************************************************************
please enter a file name
please enter a file name
please enter a file name
please enter a file name
please enter a file name
please enter a file name
please enter a file name
please enter a file name
please enter a file name
please enter a file name
please enter a file name
please enter a file name
please enter a file name
please enter a file name
please enter a file name
please enter a file name
please enter a file name
please enter a file name
please enter a file name
please enter a file name
p
**********************************************************************

Code ran without errors

Time consumed = 10.04344s

======================================================================
======================================================================
Finished running scripts

Ran into 2 errors

======================================================================
======================================================================

FINISHED WEEKLY ASSESSMENT

Current Points for the Week = 99.5

NOTE THAT THESE ARE POINTS, NOT MARKS FOR THE WEEK!